policyBuilder
    .For<FooInterceptorAttribute>(1, interceptor => interceptor
                      .To<FoobarService>(target => target
                          .IncludeMethod(foobar => foobar.InterceptableInvokeAsync())
                          .IncludeProperty(foobar => foobar.Both, PropertyMethod.Both)
                          .IncludeProperty(foobar => foobar.Get, PropertyMethod.Get)
                          .IncludeProperty(foobar => foobar.Set, PropertyMethod.Set))
                      .To<FoobazService>(targetBuilder => targetBuilder
                          .IncludeMethod(foobar => foobar.InterceptableInvokeAsync())
                          .IncludeProperty(foobar => foobar.Both, PropertyMethod.Both)
                          .IncludeProperty(foobar => foobar.Get, PropertyMethod.Get)
                          .IncludeProperty(foobar => foobar.Set, PropertyMethod.Set)))

                 .For<BarInterceptorAttribute>(2, interceptor => interceptor
                      .To<FoobarService>(target => target
                          .IncludeMethod(foobar => foobar.InterceptableInvokeAsync())
                          .IncludeProperty(foobar => foobar.Both, PropertyMethod.Both)
                          .IncludeProperty(foobar => foobar.Get, PropertyMethod.Get)
                          .IncludeProperty(foobar => foobar.Set, PropertyMethod.Set))
                      .To<BarbazService>(targetBuilder => targetBuilder
                          .IncludeMethod(foobar => foobar.InterceptableInvokeAsync())
                          .IncludeProperty(foobar => foobar.Both, PropertyMethod.Both)
                          .IncludeProperty(foobar => foobar.Get, PropertyMethod.Get)
                          .IncludeProperty(foobar => foobar.Set, PropertyMethod.Set)))

                  .For<BazInterceptorAttribute>(3, interceptor => interceptor
                      .To<FoobazService>(target => target
                          .IncludeAllMembers()
                          .ExcludeMethod(foobar => foobar.NonInterceptableInvokeAsync())
                          .ExcludeProperty(foobar => foobar.NonInterceptable, PropertyMethod.Both)
                          .ExcludeProperty(foobar => foobar.Get, PropertyMethod.Set)
                          .ExcludeProperty(foobar => foobar.Set, PropertyMethod.Get))
                      .To<BarbazService>(targetBuilder => targetBuilder
                          .IncludeMethod(foobar => foobar.InterceptableInvokeAsync())
                          .IncludeProperty(foobar => foobar.Both, PropertyMethod.Both)
                          .IncludeProperty(foobar => foobar.Get, PropertyMethod.Get)
                          .IncludeProperty(foobar => foobar.Set, PropertyMethod.Set)));